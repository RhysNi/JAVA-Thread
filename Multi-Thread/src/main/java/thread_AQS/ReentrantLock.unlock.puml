@startuml
'https://plantuml.com/sequence-diagram

autonumber
participant Coder
participant ReentrantLock
participant NonfairSyncOrFairSync
participant Sync
participant AbstractQueuedSynchronizer
participant AbstractOwnableSynchronizer

Coder ->> ReentrantLock:unlock()
ReentrantLock->>NonfairSyncOrFairSync: sync.release(1)
NonfairSyncOrFairSync->>AbstractQueuedSynchronizer:release(1)
AbstractQueuedSynchronizer->>Sync:tryRelease(1)【尝试释放】
Sync->>AbstractQueuedSynchronizer:getState()
AbstractQueuedSynchronizer-->>NonfairSyncOrFairSync:return state
Sync->>Sync:newState =（state-releases）
alt Thread.currentThread() != getExclusiveOwnerThread() 【持有锁的线程非当前线程】
note left of Sync:throw new IllegalMonitorStateException()
else
   alt newState==0 【本次释放后锁持未被任何线程持有了】
       Sync->>AbstractOwnableSynchronizer:setExclusiveOwnerThread(null) 【清除占有锁的线程】
       Sync->>AbstractQueuedSynchronizer:setState 【state重置为0】
       Sync-->>AbstractQueuedSynchronizer:释放成功
       alt AQS队列为空
           AbstractQueuedSynchronizer-->>NonfairSyncOrFairSync:释放成功
       else AQS队列不为空
           AbstractQueuedSynchronizer->>AbstractQueuedSynchronizer:unparkSuccessor
       end
   else
       Sync->>AbstractQueuedSynchronizer:setState
       Sync-->>AbstractQueuedSynchronizer:释放失败
   end
   AbstractQueuedSynchronizer-->>NonfairSyncOrFairSync:锁未被释放
end


@enduml